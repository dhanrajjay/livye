export class Endpoints {
	public static readonly LOGIN = '/auth/login';
	public static readonly LOGOUT = '/auth/logout';
	public static readonly CERTIFICATE = '/certificate';
	public static readonly SERVICE = '/service';
	public static readonly REMOTE_COMMAND = '/monitor/rc';
	public static readonly REGISTER = '/auth/register';
	public static readonly VAS = '/vas';
	public static readonly COMMAND = '/rc_setup';
	public static readonly USAGE = '/usage';
	public static readonly USAGE_BY_ID = (id) => `${Endpoints.USAGE}/${id}`;
	public static readonly USAGE_BY_ORG = (orgId, userId) => `${Endpoints.USAGE}/${orgId}/${userId}`;
	public static readonly SERVICE_LIST = (deviceId) => `/servicemapper/${deviceId}`;
	public static readonly DEL_SERVICE = (service, status) => `/service/${service}/${status}`;
	public static readonly STATUS_CHANGE = '/servicemapper/changeStatus';
	public static readonly DOMAIN_RECORDS = `${Endpoints.CERTIFICATE}/check`;
	public static readonly REQUEST_CHALLENGE = `${Endpoints.CERTIFICATE}/challenge`;
	public static readonly CER_VALIDATE = `${Endpoints.CERTIFICATE}/validate`;
	public static readonly UPLOAD_CER = `${Endpoints.CERTIFICATE}/upload`;
	public static readonly ORG_SETTING = '/org_setting';
	public static readonly ORG_SETTING_BY_ID = (id) => `${Endpoints.ORG_SETTING}/${id}`;
	public static readonly TARIFF = '/tariff';
	public static readonly TARIFF_BY_ID = (id) => `${Endpoints.TARIFF}/${id}`;
	public static readonly GET_COMMMAND_BY_ROLE = (info) => `${Endpoints.COMMAND}/${info}`;
	public static readonly COMMAND_BY_CMD = (cmd) => `${Endpoints.COMMAND}/${cmd}`;	
	public static readonly INSTALL_REQUEST = '/installationrequest';
	public static readonly SERVICE_REQUEST = '/servicerequest';
	public static readonly UPDATE_SERVICE_REQUEST = (reqInfo) => `${Endpoints.SERVICE_REQUEST}/${reqInfo}`;
	public static readonly CATEGORY = '/category';
	public static readonly UPDATE_CATEGORY = (categoryId) => `${Endpoints.CATEGORY}/${categoryId}`;
	public static readonly DEL_CATEGORY = (category) => `${Endpoints.CATEGORY}/${category}`;
	public static readonly BUMP_LIST = '/bump_whitelist';
	public static readonly DELETE_BUMP_LIST = (orgId, domain) => `${Endpoints.BUMP_LIST}/${orgId}/${domain}`;
	public static readonly DELETE_BUMP_BY_ORG_ID = (orgId, domain) => `${Endpoints.VAS}/${orgId}/${domain}`;
	public static readonly UPLOAD_SSL_CERT = '/certificate/certificate';
	public static readonly ASCL = '/acl/acl';
	public static readonly OTT = '/ott/ott';
	public static readonly LIVE = '/live/live';
	public static readonly BY_PASS = '/bypass';
	public static readonly QOSSTATIC = '/qosstatic/qosstatic';
	public static readonly QOXSTATIC = '/qoxstatic/qoxstatic';
	public static readonly ALL_DOMAINS = '/certificate';
	public static readonly ALL_STATIC = '/qosstatic';
	public static readonly ALL_ACL = '/acl';
	public static readonly ALL_QOX = '/qoxstatic';
	public static readonly ALL_BY_PASS = (orgId) => `${Endpoints.BY_PASS}/${orgId}`;
	public static readonly DEL_BY_PASS = (passId, siteName, flag) => `${Endpoints.BY_PASS}/${passId}/${siteName}/${flag}`;
	public static readonly ALL_OTT = (userId) => `/ott/${userId}`;
	public static readonly DEL_OTT = (orgId, domain) => `/ott/${orgId}/${domain}`;
	public static readonly ALL_LIVE = (userId) => `/live/${userId}`;	
	public static readonly CERT = '/certificate/uploadSSLCertificate';
	public static readonly USER_URL = '/user';
	public static readonly USER_BY_ID = (userId) => `/user/${userId}`;
	public static readonly DEVICE_URL = '/dev';
	public static readonly DEVICE_BY_ID = (deviceId) => `/dev/${deviceId}`;
	public static readonly COMPLIAN_URL = '/complain';
	public static readonly COMPLIAN_BY_ID = (complainId) => `/complain/${complainId}`;
	public static readonly ORG_URL = '/org';
	public static readonly ORG_BY_ID = (orgId) => `${Endpoints.ORG_URL}/${orgId}`;
	public static readonly APPS_BY_ID = (deviceId) => `/monitor/${deviceId}`;
	public static readonly ALL_STATS = (userId, deviceId, startTime, endTime) => `/stats/${userId}/${deviceId}/${startTime}/${endTime}`;	
	public static readonly DEL_LIVE = (orgId, userId, domain, context, contextId, input) => `/live/${orgId}/${userId}/${domain}/${context}/${contextId}/${input}`;	
	public static readonly DEL_STATIC = (domain, userId) => `/qosstatic/${domain}/${userId}`;
	public static readonly DEL_DOMAIN_CERT = (orgId, domainName) => `/certificate/${orgId}/${domainName}`;
	public static readonly DEVICE_BY_ORG_ID = (userId) => `/dev/org/${userId}`;
	public static readonly GET_REPORTS = (userId, deviceId) => `/reports/${userId}/${deviceId}`;
	public static readonly DEL_TORRENTS = (name, status, deviceId) => `/reports/${name}/${status}/${deviceId}`;
	public static readonly DEL_INSTALLATION = (installationId) => `${Endpoints.INSTALL_REQUEST}/${installationId}`;
	public static readonly UPDATE_IR = (installationId) => `${Endpoints.INSTALL_REQUEST}/${installationId}`;
	public static readonly STATUS_BY_ID = (deviceId) => `/checks/${deviceId}`;
	public static readonly DEL_SERVICE_REQUEST = (id) => `${Endpoints.SERVICE_REQUEST}/${id}`;
}